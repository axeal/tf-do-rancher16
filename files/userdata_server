#!/bin/bash -x
export curlimage=appropriate/curl
export jqimage=stedolan/jq

if [ `command -v curl` ]; then
  curl -sL https://releases.rancher.com/install-docker/${docker_version_server}.sh | sh
elif [ `command -v wget` ]; then
  wget -qO- https://releases.rancher.com/install-docker/${docker_version_server}.sh | sh
fi

for image in $curlimage $jqimage "rancher/server:${rancher_version}"; do
  until docker inspect $image > /dev/null 2>&1; do
    docker pull $image
    sleep 2
  done
done

docker run -d -e DEFAULT_CATTLE_TELEMETRY_OPT="out" --restart=unless-stopped -p 8080:8080 -v /mysql:/var/lib/mysql rancher/server:${rancher_version}

# Comment line above and uncomment this one to use custom catalogs (TODO: make configurable)
#docker run -d -e DEFAULT_CATTLE_CATALOG_URL='{"catalogs":{"community":{"url":"https://git.rancher.io/community-catalog.git","branch":"master"},"library":{"url":"https://github.com/rancher/rancher-catalog.git","branch":"v1.6-development"}}}' -e DEFAULT_CATTLE_TELEMETRY_OPT="out" --restart=unless-stopped -p 8080:8080 -v /mysql:/var/lib/mysql rancher/server:${rancher_version}

while true; do
  docker run --rm --net=host $curlimage -sLk http://127.0.0.1:8080/ping && break
  sleep 5
done

for orchestrator in cattle kubernetes; do

# lookup orchestrator template id
while true; do
  ENV_TEMPLATE_ID=$(docker run \
    --net=host \
    -v /tmp:/tmp \
    --rm \
    $curlimage \
      -sLk \
        "http://127.0.0.1:8080/v2-beta/projectTemplates?name=$orchestrator" | docker run --rm -i $jqimage -r '.data[0].id')

  # might've received 422 InvalidReference if the templates haven't populated yet
  if [[ "$ENV_TEMPLATE_ID" == 1pt* ]]; then
    break
  else
    sleep 5
  fi
done

# create an environment with specified orchestrator template
docker run \
  --net=host \
  -v /tmp:/tmp \
  --rm \
  $curlimage \
    -sLk \
    -X POST \
    -H 'Accept: application/json' \
    -H 'Content-Type: application/json' \
    -d "{\"description\":\"$orchestrator\",\"name\":\"$orchestrator\",\"projectTemplateId\":\"$ENV_TEMPLATE_ID\",\"allowSystemRole\":false,\"members\":[],\"virtualMachine\":false,\"servicesPortRange\":null}" \
      "http://127.0.0.1:8080/v2-beta/projects"
done

# lookup default environment id
default_env_id=$(docker run --net=host -v /tmp:/tmp --rm $curlimage -sLk "http://127.0.0.1:8080/v2-beta/project?name=Default" | docker run --rm -i $jqimage -r '.data[0].id')

# delete default environment
docker run \
  --net=host \
  --rm \
  $curlimage \
    -sLk \
    -X DELETE \
    -H 'Accept: application/json' \
    -H 'Content-Type: application/json' \
    -d '{}' \
      "http://127.0.0.1:8080/v2-beta/projects/$default_env_id/?action=delete"
fi
